{"ast":null,"code":"import _possibleConstructorReturn from \"C:\\\\JB\\\\gestion-inventario\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"C:\\\\JB\\\\gestion-inventario\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"C:\\\\JB\\\\gestion-inventario\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _inherits from \"C:\\\\JB\\\\gestion-inventario\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _classCallCheck from \"C:\\\\JB\\\\gestion-inventario\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\JB\\\\gestion-inventario\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n  return function (source) {\n    return source.lift(new DistinctOperator(keySelector, flushes));\n  };\n}\nvar DistinctOperator = /*#__PURE__*/function () {\n  function DistinctOperator(keySelector, flushes) {\n    _classCallCheck(this, DistinctOperator);\n    this.keySelector = keySelector;\n    this.flushes = flushes;\n  }\n  return _createClass(DistinctOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    }\n  }]);\n}();\nexport var DistinctSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  function DistinctSubscriber(destination, keySelector, flushes) {\n    var _this;\n    _classCallCheck(this, DistinctSubscriber);\n    _this = _callSuper(this, DistinctSubscriber, [destination]);\n    _this.keySelector = keySelector;\n    _this.values = new Set();\n    if (flushes) {\n      _this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(_this)));\n    }\n    return _this;\n  }\n  _inherits(DistinctSubscriber, _SimpleOuterSubscribe);\n  return _createClass(DistinctSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.values.clear();\n    }\n  }, {\n    key: \"notifyError\",\n    value: function notifyError(error) {\n      this._error(error);\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (this.keySelector) {\n        this._useKeySelector(value);\n      } else {\n        this._finalizeNext(value, value);\n      }\n    }\n  }, {\n    key: \"_useKeySelector\",\n    value: function _useKeySelector(value) {\n      var key;\n      var destination = this.destination;\n      try {\n        key = this.keySelector(value);\n      } catch (err) {\n        destination.error(err);\n        return;\n      }\n      this._finalizeNext(key, value);\n    }\n  }, {\n    key: \"_finalizeNext\",\n    value: function _finalizeNext(key, value) {\n      var values = this.values;\n      if (!values.has(key)) {\n        values.add(key);\n        this.destination.next(value);\n      }\n    }\n  }]);\n}(SimpleOuterSubscriber);\n//# sourceMappingURL=distinct.js.map","map":null,"metadata":{},"sourceType":"module"}